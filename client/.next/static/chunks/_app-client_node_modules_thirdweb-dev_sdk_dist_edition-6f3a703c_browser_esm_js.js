"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-client_node_modules_thirdweb-dev_sdk_dist_edition-6f3a703c_browser_esm_js"],{

/***/ "(app-client)/../node_modules/@thirdweb-dev/sdk/dist/edition-6f3a703c.browser.esm.js":
/*!******************************************************************************!*\
  !*** ../node_modules/@thirdweb-dev/sdk/dist/edition-6f3a703c.browser.esm.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Edition\": function() { return /* binding */ Edition; }\n/* harmony export */ });\n/* harmony import */ var _QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./QueryParams-7d9473b5.browser.esm.js */ \"(app-client)/../node_modules/@thirdweb-dev/sdk/dist/QueryParams-7d9473b5.browser.esm.js\");\n/* harmony import */ var _watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./watchTransactions-b1ddcccb.browser.esm.js */ \"(app-client)/../node_modules/@thirdweb-dev/sdk/dist/watchTransactions-b1ddcccb.browser.esm.js\");\n/* harmony import */ var _erc_1155_standard_d01552cf_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./erc-1155-standard-d01552cf.browser.esm.js */ \"(app-client)/../node_modules/@thirdweb-dev/sdk/dist/erc-1155-standard-d01552cf.browser.esm.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ethers */ \"(app-client)/../node_modules/@ethersproject/constants/lib.esm/addresses.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ \"(app-client)/../node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bs58 */ \"(app-client)/../node_modules/@thirdweb-dev/sdk/node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! eventemitter3 */ \"(app-client)/../node_modules/@thirdweb-dev/sdk/node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var _thirdweb_dev_storage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @thirdweb-dev/storage */ \"(app-client)/../node_modules/@thirdweb-dev/storage/dist/thirdweb-dev-storage.browser.esm.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! cross-fetch */ \"(app-client)/../node_modules/cross-fetch/dist/browser-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tiny-invariant */ \"(app-client)/../node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! merkletreejs */ \"(app-client)/../node_modules/merkletreejs/dist/index.js\");\n/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(merkletreejs__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! fast-deep-equal */ \"(app-client)/../node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_7__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create a collection of NFTs that lets you mint multiple copies of each NFT.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"edition\");\n * ```\n *\n * @public\n */\nclass Edition extends _erc_1155_standard_d01552cf_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.S {\n  /**\n   * Configure royalties\n   * @remarks Set your own royalties for the entire contract or per token\n   * @example\n   * ```javascript\n   * // royalties on the whole contract\n   * contract.royalties.setDefaultRoyaltyInfo({\n   *   seller_fee_basis_points: 100, // 1%\n   *   fee_recipient: \"0x...\"\n   * });\n   * // override royalty for a particular token\n   * contract.royalties.setTokenRoyaltyInfo(tokenId, {\n   *   seller_fee_basis_points: 500, // 5%\n   *   fee_recipient: \"0x...\"\n   * });\n   * ```\n   */\n\n  /**\n   * Signature Minting\n   * @remarks Generate dynamic NFTs with your own signature, and let others mint them using that signature.\n   * @example\n   * ```javascript\n   * // see how to craft a payload to sign in the `contract.signature.generate()` documentation\n   * const signedPayload = contract.signature.generate(payload);\n   *\n   * // now anyone can mint the NFT\n   * const tx = contract.signature.mint(signedPayload);\n   * const receipt = tx.receipt; // the mint transaction receipt\n   * const mintedId = tx.id; // the id of the NFT minted\n   * ```\n   */\n\n  constructor(network, address, storage) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let abi = arguments.length > 4 ? arguments[4] : undefined;\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new _watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.dC(network, address, abi, options);\n    super(contractWrapper, storage, chainId);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"abi\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"metadata\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"app\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"roles\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"sales\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"platformFees\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"encoder\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"estimator\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"events\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"royalties\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"signature\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"interceptor\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"owner\", void 0);\n    /** ******************************\n     * WRITE FUNCTIONS\n     *******************************/\n    /**\n     * Mint NFT for the connected wallet\n     *\n     * @remarks See {@link Edition.mintTo}\n     */\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"mint\", (0,_watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.du)(async metadataWithSupply => {\n      return this.erc1155.mint.prepare(metadataWithSupply);\n    }));\n    /**\n     * Mint an NFT with a limited supply\n     *\n     * @remarks Mint an NFT with a limited supply to a specified wallet.\n     *\n     * @example\n     * ```javascript\n     * // Address of the wallet you want to mint the NFT to\n     * const toAddress = \"{{wallet_address}}\"\n     *\n     * // Custom metadata of the NFT, note that you can fully customize this metadata with other properties.\n     * const metadata = {\n     *   name: \"Cool NFT\",\n     *   description: \"This is a cool NFT\",\n     *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n     * }\n     *\n     * const metadataWithSupply = {\n     *   metadata,\n     *   supply: 1000, // The number of this NFT you want to mint\n     * }\n     *\n     * const tx = await contract.mintTo(toAddress, metadataWithSupply);\n     * const receipt = tx.receipt; // the transaction receipt\n     * const tokenId = tx.id; // the id of the NFT minted\n     * const nft = await tx.data(); // (optional) fetch details of minted NFT\n     * ```\n     */\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"mintTo\", (0,_watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.du)(async (to, metadataWithSupply) => {\n      return this.erc1155.mintTo.prepare(to, metadataWithSupply);\n    }));\n    /**\n     * Increase the supply of an existing NFT and mint it to the connected wallet\n     *\n     * @param tokenId - the token id of the NFT to increase supply of\n     * @param additionalSupply - the additional amount to mint\n     */\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"mintAdditionalSupply\", (0,_watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.du)(async (tokenId, additionalSupply) => {\n      return this.erc1155.mintAdditionalSupply.prepare(tokenId, additionalSupply);\n    }));\n    /**\n     * Increase the supply of an existing NFT and mint it to a given wallet address\n     *\n     * @param to - the address to mint to\n     * @param tokenId - the token id of the NFT to increase supply of\n     * @param additionalSupply - the additional amount to mint\n     */\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"mintAdditionalSupplyTo\", (0,_watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.du)(async (to, tokenId, additionalSupply) => {\n      return this.erc1155.mintAdditionalSupplyTo.prepare(to, tokenId, additionalSupply);\n    }));\n    /**\n     * Mint Many NFTs for the connected wallet\n     *\n     * @remarks See {@link Edition.mintBatchTo}\n     */\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"mintBatch\", (0,_watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.du)(async metadatas => {\n      return this.erc1155.mintBatch.prepare(metadatas);\n    }));\n    /**\n     * Mint Many NFTs with limited supplies\n     *\n     * @remarks Mint many different NFTs with limited supplies to a specified wallet.\n     *\n     * @example\n     * ```javascript\n     * // Address of the wallet you want to mint the NFT to\n     * const toAddress = \"{{wallet_address}}\"\n     *\n     * // Custom metadata and supplies of your NFTs\n     * const metadataWithSupply = [{\n     *   supply: 50, // The number of this NFT you want to mint\n     *   metadata: {\n     *     name: \"Cool NFT #1\",\n     *     description: \"This is a cool NFT\",\n     *     image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n     *   },\n     * }, {\n     *   supply: 100,\n     *   metadata: {\n     *     name: \"Cool NFT #2\",\n     *     description: \"This is a cool NFT\",\n     *     image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n     *   },\n     * }];\n     *\n     * const tx = await contract.mintBatchTo(toAddress, metadataWithSupply);\n     * const receipt = tx[0].receipt; // same transaction receipt for all minted NFTs\n     * const firstTokenId = tx[0].id; // token id of the first minted NFT\n     * const firstNFT = await tx[0].data(); // (optional) fetch details of the first minted NFT\n     * ```\n     */\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"mintBatchTo\", (0,_watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.du)(async (to, metadataWithSupply) => {\n      return this.erc1155.mintBatchTo.prepare(to, metadataWithSupply);\n    }));\n    /**\n     * Burn a specified amount of a NFT\n     *\n     * @param tokenId - the token Id to burn\n     * @param amount - amount to burn\n     *\n     * @example\n     * ```javascript\n     * const result = await contract.burnTokens(tokenId, amount);\n     * ```\n     */\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"burn\", (0,_watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.du)(async (tokenId, amount) => {\n      return this.erc1155.burn.prepare(tokenId, amount);\n    }));\n    this.abi = _watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.e.parse(abi || []);\n    this.metadata = new _watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.ai(this.contractWrapper, _watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.dE, this.storage);\n    this.app = new _watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aW(this.contractWrapper, this.metadata, this.storage);\n    this.roles = new _watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aj(this.contractWrapper, Edition.contractRoles);\n    this.royalties = new _watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.ak(this.contractWrapper, this.metadata);\n    this.sales = new _watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.al(this.contractWrapper);\n    this.encoder = new _watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.ah(this.contractWrapper);\n    this.estimator = new _watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aO(this.contractWrapper);\n    this.events = new _watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aP(this.contractWrapper);\n    this.platformFees = new _watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aR(this.contractWrapper);\n    this.interceptor = new _watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aQ(this.contractWrapper);\n    this.signature = new _watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aH(this.contractWrapper, this.storage, this.roles);\n    this.owner = new _watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aT(this.contractWrapper);\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get all NFTs\n   *\n   * @remarks Get all the data associated with every NFT in this contract.\n   *\n   * By default, returns the first 100 NFTs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const nfts = await contract.getAll();\n   * ```\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs queried.\n   */\n  async getAll(queryParams) {\n    return this.erc1155.getAll(queryParams);\n  }\n\n  /**\n   * Get all NFTs owned by a specific wallet\n   *\n   * @remarks Get all the data associated with the NFTs owned by a specific wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to get the NFTs of\n   * const address = \"{{wallet_address}}\";\n   * const nfts = await contract.getOwned(address);\n   * ```\n   *\n   * @returns The NFT metadata for all NFTs in the contract.\n   */\n  async getOwned(walletAddress) {\n    return this.erc1155.getOwned(walletAddress);\n  }\n\n  /**\n   * Get the number of NFTs minted\n   * @returns the total number of NFTs minted in this contract\n   * @public\n   */\n  async getTotalCount() {\n    return this.erc1155.totalCount();\n  }\n\n  /**\n   * Get whether users can transfer NFTs from this contract\n   */\n  async isTransferRestricted() {\n    const anyoneCanTransfer = await this.contractWrapper.readContract.hasRole((0,_watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.bq)(\"transfer\"), ethers__WEBPACK_IMPORTED_MODULE_11__.AddressZero);\n    return !anyoneCanTransfer;\n  }\n  /**\n   * Construct a mint transaction without executing it.\n   * This is useful for estimating the gas cost of a mint transaction, overriding transaction options and having fine grained control over the transaction execution.\n   * @param receiver - Address you want to send the token to\n   * @param metadataWithSupply - The metadata of the NFT you want to mint\n   *\n   * @deprecated `contract.mint.prepare(...args)`\n   */\n  async getMintTransaction(receiver, metadataWithSupply) {\n    return this.erc1155.getMintTransaction(receiver, metadataWithSupply);\n  }\n  /**\n   * @internal\n   */\n  async prepare(method, args, overrides) {\n    return _watchTransactions_b1ddcccb_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aU.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method,\n      args,\n      overrides\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async call(functionName, args, overrides) {\n    return this.contractWrapper.call(functionName, args, overrides);\n  }\n}\n(0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(Edition, \"contractRoles\", [\"admin\", \"minter\", \"transfer\"]);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-client)/../node_modules/@thirdweb-dev/sdk/dist/edition-6f3a703c.browser.esm.js\n"));

/***/ })

}]);